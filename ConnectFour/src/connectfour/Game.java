/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package connectfour;

/**
 *
 * @author Ventsislav Peychev
 */
import javax.swing.*;
import java.awt.Color;
import java.awt.Graphics;

public class Game extends javax.swing.JFrame {
    private MyPanel[][] pnlarr = new MyPanel [6][7];
    private int playerTurn;
    /**
     * Creates new form Game
     */
    
    public void setPlayerTurn(int playerTurn)
    {
        if (playerTurn == 1)
        {
            jLabel1.setText("PLAYER 1's TURN");
        }
        else
        {
            jLabel1.setText("PLAYER 2's TURN");
        }
        this.playerTurn = playerTurn;
    }
    
    public int getPlayerTurn()
    {
        return this.playerTurn;
    }
    
    public Game() {
        initComponents();
        init_arr();
        setLocationRelativeTo(null);
        setTitle("Connect Four");
        setPlayerTurn(1);
    }

    private void init_arr()
    {
        for (int i = 0; i < 6; ++i)
        {
            for (int j = 0; j < 7; ++j)
            {
                pnlarr[i][j] = new MyPanel();
                add(pnlarr[i][j]);
                pnlarr[i][j].setBounds(120 + j * 120, i * 110 + 90, 85, 85);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStart.setText("Start");
        btnStart.setToolTipText("");
        btnStart.setActionCommand("btnStart");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        jButton1.setText("Play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Play");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Play");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Play");
        jButton4.setToolTipText("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Play");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Play");
        jButton6.setToolTipText("");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Play");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PLAYER 1's TURN!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnStart)
                .addGap(64, 64, 64)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(67, 67, 67)
                        .addComponent(jButton3)
                        .addGap(66, 66, 66)
                        .addComponent(jButton4)
                        .addGap(71, 71, 71)
                        .addComponent(jButton5)
                        .addGap(71, 71, 71)
                        .addComponent(jButton6)
                        .addGap(65, 65, 65)
                        .addComponent(jButton7)
                        .addGap(38, 38, 38))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 648, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        for (int i = 0; i < 6; ++i)
        {
            for (int j = 0; j < 7; ++j)
            {
                //pnlarr[i][j].setBackground(Color.RED);
                Graphics g = pnlarr[i][j].getGraphics();
                g.setColor(Color.YELLOW);
                g.fillOval(22, 22, 40, 40);
            }
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        for (int j = 5; j >= 0; j--)
        {
            if (pnlarr[j][0].getCol().getRGB() != Color.YELLOW.getRGB()) continue;
            else
            {
                Graphics g = pnlarr[j][0].getGraphics();
                g.setColor(getPlayerColor());
                g.fillOval(22, 22, 40, 40);
                pnlarr[j][0].setCol(getPlayerColor());
                setPlayerTurn(getPlayerTurn() * -1);
                break;
            }
        }
        if (won())
        {
            String player = (getPlayerTurn() == 1 ? "PLAYER 1" : "PLAYER 2");
            JOptionPane.showMessageDialog(null, "CONGRATULATIONS, " + player + " YOU WON!", "Good Game", JOptionPane.PLAIN_MESSAGE);
            dispose();
        }
        else if (draw())
        {
            JOptionPane.showMessageDialog(null, "IT'S A DRAW", "Good Game", JOptionPane.PLAIN_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        for (int j = 5; j >= 0; j--)
        {
            if (pnlarr[j][1].getCol().getRGB() != Color.YELLOW.getRGB()) continue;
            else
            {
                Graphics g = pnlarr[j][1].getGraphics();
                g.setColor(getPlayerColor());
                g.fillOval(22, 22, 40, 40);
                pnlarr[j][1].setCol(getPlayerColor());
                setPlayerTurn(getPlayerTurn() * -1);
                break;
            }
        }
        if (won())
        {
            String player = (getPlayerTurn() == 1 ? "PLAYER 1" : "PLAYER 2");
            JOptionPane.showMessageDialog(null, "CONGRATULATIONS, " + player + " YOU WON!", "Good Game", JOptionPane.PLAIN_MESSAGE);dispose();
            dispose();
        }
        else if (draw())
        {
            JOptionPane.showMessageDialog(null, "IT'S A DRAW", "Good Game", JOptionPane.PLAIN_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for (int j = 5; j >= 0; j--)
        {
            if (pnlarr[j][2].getCol().getRGB() != Color.YELLOW.getRGB()) continue;
            else
            {
                Graphics g = pnlarr[j][2].getGraphics();
                g.setColor(getPlayerColor());
                g.fillOval(22, 22, 40, 40);
                pnlarr[j][2].setCol(getPlayerColor());
                setPlayerTurn(getPlayerTurn() * -1);
                break;
            }
        }
        if (won())
        {
            String player = (getPlayerTurn() == 1 ? "PLAYER 1" : "PLAYER 2");
            JOptionPane.showMessageDialog(null, "CONGRATULATIONS, " + player + " YOU WON!", "Good Game", JOptionPane.PLAIN_MESSAGE);dispose();
            dispose();
        }
        else if (draw())
        {
            JOptionPane.showMessageDialog(null, "IT'S A DRAW", "Good Game", JOptionPane.PLAIN_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        for (int j = 5; j >= 0; j--)
        {
            if (pnlarr[j][3].getCol().getRGB() != Color.YELLOW.getRGB()) continue;
            else
            {
                Graphics g = pnlarr[j][3].getGraphics();
                g.setColor(getPlayerColor());
                g.fillOval(22, 22, 40, 40);
                pnlarr[j][3].setCol(getPlayerColor());
                setPlayerTurn(getPlayerTurn() * -1);
                break;
            }
        }
        if (won())
        {
            String player = (getPlayerTurn() == 1 ? "PLAYER 1" : "PLAYER 2");
            JOptionPane.showMessageDialog(null, "CONGRATULATIONS, " + player + " YOU WON!", "Good Game", JOptionPane.PLAIN_MESSAGE);dispose();
            dispose();
        }
        else if (draw())
        {
            JOptionPane.showMessageDialog(null, "IT'S A DRAW", "Good Game", JOptionPane.PLAIN_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        for (int j = 5; j >= 0; j--)
        {
            if (pnlarr[j][4].getCol().getRGB() != Color.YELLOW.getRGB()) continue;
            else
            {
                Graphics g = pnlarr[j][4].getGraphics();
                g.setColor(getPlayerColor());
                g.fillOval(22, 22, 40, 40);
                pnlarr[j][4].setCol(getPlayerColor());
                setPlayerTurn(getPlayerTurn() * -1);
                break;
            }
        }
        if (won())
        {
            String player = (getPlayerTurn() == 1 ? "PLAYER 1" : "PLAYER 2");
            JOptionPane.showMessageDialog(null, "CONGRATULATIONS, " + player + " YOU WON!", "Good Game", JOptionPane.PLAIN_MESSAGE);dispose();
            dispose();
        }
        else if (draw())
        {
            JOptionPane.showMessageDialog(null, "IT'S A DRAW", "Good Game", JOptionPane.PLAIN_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        for (int j = 5; j >= 0; j--)
        {
            if (pnlarr[j][5].getCol().getRGB() != Color.YELLOW.getRGB()) continue;
            else
            {
                Graphics g = pnlarr[j][5].getGraphics();
                g.setColor(getPlayerColor());
                g.fillOval(22, 22, 40, 40);
                pnlarr[j][5].setCol(getPlayerColor());
                setPlayerTurn(getPlayerTurn() * -1);
                break;
            }
        }
        if (won())
        {
            String player = (getPlayerTurn() == 1 ? "PLAYER 1" : "PLAYER 2");
            JOptionPane.showMessageDialog(null, "CONGRATULATIONS, " + player + " YOU WON!", "Good Game", JOptionPane.PLAIN_MESSAGE);dispose();
            dispose();
        }
        else if (draw())
        {
            JOptionPane.showMessageDialog(null, "IT'S A DRAW", "Good Game", JOptionPane.PLAIN_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        for (int j = 5; j >= 0; j--)
        {
            if (pnlarr[j][6].getCol().getRGB() != Color.YELLOW.getRGB()) continue;
            else
            {
                Graphics g = pnlarr[j][6].getGraphics();
                g.setColor(getPlayerColor());
                g.fillOval(22, 22, 40, 40);
                pnlarr[j][6].setCol(getPlayerColor());
                setPlayerTurn(getPlayerTurn() * -1);
                break;
            }
        }
        if (won())
        {
            String player = (getPlayerTurn() == 1 ? "PLAYER 1" : "PLAYER 2");
            JOptionPane.showMessageDialog(null, "CONGRATULATIONS, " + player + " YOU WON!", "Good Game", JOptionPane.PLAIN_MESSAGE);
            dispose();
        }
        else if (draw())
        {
            JOptionPane.showMessageDialog(null, "IT'S A DRAW", "Good Game", JOptionPane.PLAIN_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private boolean won()
    {
        for(int i = 0; i < pnlarr.length; ++i)
        {
            for (int j = 0; j < pnlarr[i].length - 3; ++j)
            {
                if (pnlarr[i][j].getCol().getRGB() == pnlarr[i][j + 1].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() == pnlarr[i][j + 2].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() == pnlarr[i][j + 3].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() != Color.yellow.getRGB())
                {
                    return true;
                }
            }			
        }
        //check for 4 up and down
        for(int i = 0; i < pnlarr.length - 3; i++){
            for(int j = 0; j < pnlarr[0].length; j++){
                if (pnlarr[i][j].getCol().getRGB() == pnlarr[i + 1][j].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() == pnlarr[i + 2][j].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() == pnlarr[i + 3][j].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() != Color.yellow.getRGB())
                {
                    return true;
                }
            }
        }
        //check upward diagonal
        for(int i = 3; i < pnlarr.length; i++){
            for(int j = 0; j < pnlarr[0].length - 3; j++){
                if (pnlarr[i][j].getCol().getRGB() == pnlarr[i - 1][j + 1].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() == pnlarr[i - 2][j + 2].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() == pnlarr[i - 3][j + 3].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() != Color.yellow.getRGB())
                {
                    return true;
                }
            }
        }
        //check downward diagonal
        for(int i = 0; i < pnlarr.length - 3; i++){
            for(int j = 0; j < pnlarr[0].length - 3; j++){
                if (pnlarr[i][j].getCol().getRGB() == pnlarr[i + 1][j + 1].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() == pnlarr[i + 2][j + 2].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() == pnlarr[i + 3][j + 3].getCol().getRGB()
                        && pnlarr[i][j].getCol().getRGB() != Color.yellow.getRGB())
                {
                     return true;
                }
            }
        }
        return false;
    }
    
    private boolean draw()
    {
        for (int i = 0; i < 6; ++i)
        {
            for (int j = 0; j < 7; ++j)
            {
                if (pnlarr[i][j].getCol().getRGB() == Color.yellow.getRGB()) return false;
            }
        }
        return true;
    }
    
    private Color getPlayerColor()
    {
        if (getPlayerTurn() == 1)
        {
            return Color.RED;
        }
        return Color.BLUE;
    }
    /**
     * @param args the command line arguments
     */
    public static void Run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="jlapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
